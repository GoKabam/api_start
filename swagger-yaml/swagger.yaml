---
swagger: "2.0"
info:
  description: "GoKabam API , access to all the GoKabam Services\n\nThis API will\
    \ cover all functionality for the company, including private management, administration\
    \ and finances\n"
  version: "1.0.0"
  title: "GoKabam API"
  contact:
    email: "willwoodlief@gokabam.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "virtserver.swaggerhub.com"
basePath: "/willwoodlief/gokabam.alpha/1.0.0"
tags:
- name: "users"
  description: "Operations/information about regular users. Includes both public info\
    \ anyone can get, and also setting private account information"
- name: "companies"
  description: "Company Info, Settings and Finances. Some company info is public"
- name: "sellers"
  description: "Salesmen and selling activities. Includes customer relations for customers.\
    \ Includes sales flow"
- name: "self"
  description: "an operation which gets information only for the account that this\
    \ call has credentials for, includes private and public information"
- name: "public"
  description: "Information which anyone can see. If it does not have this tag, then\
    \ it requires credentials to see"
- name: "customer_services"
  description: "Controls Regular Users,Salesmen and Companies. Can change any setting\
    \ for regular accounts"
- name: "higher_admins"
  description: "Controls privileged Accounts (for example this company is also a regular\
    \ company in the api but private info and settings can only be accessed using\
    \ a higher_admin privilege)"
- name: "root"
  description: "Ultimate authority. Controls who is on the higher admin list. API\
    \ settings in general controlled from here"
schemes:
- "https"
consumes:
- "application/json"
- "application/x-yaml"
- "application/xml"
produces:
- "application/json"
- "application/x-yaml"
- "application/xml"
security:
- OauthSecurity: []
paths: {}
securityDefinitions:
  OauthSecurity:
    description: "New Oauth security system. Do not use MediaSecurity or LegacySecurity."
    type: "oauth2"
    authorizationUrl: "https://oauth.simple.api/oauth/authorize"
    tokenUrl: "https://oauth.simple.api/oauth/token"
    flow: "accessCode"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
definitions: {}
